import{_ as n,o as e,c as a,a as s}from"./app.ccbb5984.js";const m='{"title":"\u989D\u5916\u65B0\u589E\u7684 API","description":"","frontmatter":{},"headers":[],"relativePath":"zh/reference/additional.md","lastUpdated":1673845773000}',t={},o=s(`<h1 id="\u989D\u5916\u65B0\u589E\u7684-api" tabindex="-1">\u989D\u5916\u65B0\u589E\u7684 API <a class="header-anchor" href="#\u989D\u5916\u65B0\u589E\u7684-api" aria-hidden="true">#</a></h1><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u4EE5\u4E0B API \u58F0\u660E\u5728 <code>emnapi.h</code> \u5934\u6587\u4EF6\u4E2D\u3002</p></div><h4 id="emnapi-is-support-weakref" tabindex="-1">emnapi_is_support_weakref <a class="header-anchor" href="#emnapi-is-support-weakref" aria-hidden="true">#</a></h4><div class="language-c"><pre><code><span class="token keyword">int</span> <span class="token function">emnapi_is_support_weakref</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u8FD0\u884C\u65F6\u652F\u6301 <code>FinalizationRegistry</code> \u548C <code>WeakRef</code>\uFF0C\u5219\u8FD4\u56DE <code>1</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>0</code>\u3002</p><h4 id="emnapi-is-support-bigint" tabindex="-1">emnapi_is_support_bigint <a class="header-anchor" href="#emnapi-is-support-bigint" aria-hidden="true">#</a></h4><div class="language-c"><pre><code><span class="token keyword">int</span> <span class="token function">emnapi_is_support_bigint</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u5982\u679C\u8FD0\u884C\u65F6\u652F\u6301 <code>BigInt</code>\uFF0C\u5219\u8FD4\u56DE <code>1</code>\uFF0C\u5426\u5219\u8FD4\u56DE <code>0</code>\u3002</p><h4 id="emnapi-get-module-object" tabindex="-1">emnapi_get_module_object <a class="header-anchor" href="#emnapi-get-module-object" aria-hidden="true">#</a></h4><div class="language-c"><pre><code>napi_status <span class="token function">emnapi_get_module_object</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                                     napi_value<span class="token operator">*</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[out] result</code>: A <code>napi_value</code> representing the <code>Module</code> object of Emscripten.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded.</p><h4 id="emnapi-get-module-property" tabindex="-1">emnapi_get_module_property <a class="header-anchor" href="#emnapi-get-module-property" aria-hidden="true">#</a></h4><div class="language-c"><pre><code>napi_status <span class="token function">emnapi_get_module_property</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                                       <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> utf8name<span class="token punctuation">,</span>
                                       napi_value<span class="token operator">*</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[in] utf8Name</code>: The name of the <code>Module</code> property to get.</li><li><code>[out] result</code>: The value of the property.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded.</p><h4 id="emnapi-create-memory-view" tabindex="-1">emnapi_create_memory_view <a class="header-anchor" href="#emnapi-create-memory-view" aria-hidden="true">#</a></h4><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">enum</span> <span class="token punctuation">{</span>
  emnapi_int8_array<span class="token punctuation">,</span>
  emnapi_uint8_array<span class="token punctuation">,</span>
  emnapi_uint8_clamped_array<span class="token punctuation">,</span>
  emnapi_int16_array<span class="token punctuation">,</span>
  emnapi_uint16_array<span class="token punctuation">,</span>
  emnapi_int32_array<span class="token punctuation">,</span>
  emnapi_uint32_array<span class="token punctuation">,</span>
  emnapi_float32_array<span class="token punctuation">,</span>
  emnapi_float64_array<span class="token punctuation">,</span>
  emnapi_bigint64_array<span class="token punctuation">,</span>
  emnapi_biguint64_array<span class="token punctuation">,</span>
  emnapi_data_view <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>
  emnapi_buffer <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span> emnapi_memory_view_type<span class="token punctuation">;</span>

napi_status <span class="token function">emnapi_create_memory_view</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                                      emnapi_memory_view_type type<span class="token punctuation">,</span>
                                      <span class="token keyword">void</span><span class="token operator">*</span> external_data<span class="token punctuation">,</span>
                                      <span class="token class-name">size_t</span> byte_length<span class="token punctuation">,</span>
                                      napi_finalize finalize_cb<span class="token punctuation">,</span>
                                      <span class="token keyword">void</span><span class="token operator">*</span> finalize_hint<span class="token punctuation">,</span>
                                      napi_value<span class="token operator">*</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[in] type</code>: The view type.</li><li><code>[in] external_data</code>: Pointer to the underlying byte buffer of the <code>ArrayBufferView</code>.</li><li><code>[in] byte_length</code>: The length in bytes of the underlying buffer.</li><li><code>[in] finalize_cb</code>: Optional callback to call when the <code>ArrayBufferView</code> is being collected.</li><li><code>[in] finalize_hint</code>: Optional hint to pass to the finalize callback during collection.</li><li><code>[out] result</code>: A <code>napi_value</code> representing a JavaScript <code>ArrayBufferView</code>.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded. Returns <code>napi_generic_failure</code> if <code>FinalizationRegistry</code> or <code>WeakRef</code> is not supported.</p><p>This API returns an N-API value corresponding to a JavaScript <code>ArrayBufferView</code>. The underlying byte buffer of the <code>ArrayBufferView</code> is externally allocated and managed. The caller must ensure that the byte buffer remains valid until the finalize callback is called.</p><h4 id="emnapi-get-emscripten-version" tabindex="-1">emnapi_get_emscripten_version <a class="header-anchor" href="#emnapi-get-emscripten-version" aria-hidden="true">#</a></h4><div class="language-c"><pre><code><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">{</span>
  <span class="token class-name">uint32_t</span> major<span class="token punctuation">;</span>
  <span class="token class-name">uint32_t</span> minor<span class="token punctuation">;</span>
  <span class="token class-name">uint32_t</span> patch<span class="token punctuation">;</span>
<span class="token punctuation">}</span> emnapi_emscripten_version<span class="token punctuation">;</span>

napi_status <span class="token function">emnapi_get_emscripten_version</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                                          <span class="token keyword">const</span> emnapi_emscripten_version<span class="token operator">*</span><span class="token operator">*</span> version<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[out] version</code>: A pointer to version information for Emscripten itself.</li></ul><p>Returns <code>napi_ok</code> if the API succeeded.</p><p>This function fills the version struct with the major, minor, and patch version of Emscripten that is used for compiling current wasm module.</p><p>The returned buffer does not need to be freed.</p><h4 id="emnapi-sync-memory" tabindex="-1">emnapi_sync_memory <a class="header-anchor" href="#emnapi-sync-memory" aria-hidden="true">#</a></h4><div class="language-c"><pre><code>napi_status <span class="token function">emnapi_sync_memory</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                               bool js_to_wasm<span class="token punctuation">,</span>
                               napi_value<span class="token operator">*</span> arraybuffer_or_view<span class="token punctuation">,</span>
                               <span class="token class-name">size_t</span> byte_offset<span class="token punctuation">,</span>
                               <span class="token class-name">size_t</span> length<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>[in] env</code>: The environment that the API is invoked under.</li><li><code>[in] js_to_wasm</code>: The direction of memory sync.</li><li><code>[in-out] arraybuffer_or_view</code>: The latest <code>ArrayBuffer</code> or <code>ArrayBufferView</code></li><li><code>[in] byte_offset</code></li><li><code>[in] length</code></li></ul><h4 id="emnapi-get-memory-address" tabindex="-1">emnapi_get_memory_address <a class="header-anchor" href="#emnapi-get-memory-address" aria-hidden="true">#</a></h4><div class="language-c"><pre><code>napi_status <span class="token function">emnapi_get_memory_address</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span>
                                      napi_value arraybuffer_or_view<span class="token punctuation">,</span>
                                      <span class="token keyword">void</span><span class="token operator">*</span><span class="token operator">*</span> address<span class="token punctuation">,</span>
                                      emnapi_ownership<span class="token operator">*</span> ownership<span class="token punctuation">,</span>
                                      bool<span class="token operator">*</span> runtime_allocated<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><ul><li><code>[in] env</code></li><li><code>[in] arraybuffer_or_view</code></li><li><code>[out] address</code></li><li><code>[out] ownership</code></li><li><code>[out] runtime_allocated</code></li></ul>`,33),p=[o];function i(c,r,l,u,d,_){return e(),a("div",null,p)}var h=n(t,[["render",i]]);export{m as __pageData,h as default};
