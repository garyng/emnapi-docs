import{_ as n,o as s,c as a,a as p}from"./app.0ba8a14d.js";const h='{"title":"\u5F00\u59CB\u4F7F\u7528","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u73AF\u5883\u8981\u6C42","slug":"\u73AF\u5883\u8981\u6C42"},{"level":2,"title":"\u5B89\u88C5","slug":"\u5B89\u88C5"},{"level":3,"title":"\u901A\u8FC7 NPM \u5B89\u88C5","slug":"\u901A\u8FC7-npm-\u5B89\u88C5"},{"level":3,"title":"\u901A\u8FC7 CMake \u5B89\u88C5","slug":"\u901A\u8FC7-cmake-\u5B89\u88C5"},{"level":2,"title":"\u7F16\u5199\u6E90\u7801","slug":"\u7F16\u5199\u6E90\u7801"},{"level":2,"title":"\u6784\u5EFA\u6E90\u7801","slug":"\u6784\u5EFA\u6E90\u7801"},{"level":2,"title":"\u5728\u6D4F\u89C8\u5668\u4E0A\u8FD0\u884C","slug":"\u5728\u6D4F\u89C8\u5668\u4E0A\u8FD0\u884C"},{"level":2,"title":"\u5728 Node.js \u4E0A\u8FD0\u884C","slug":"\u5728-node-js-\u4E0A\u8FD0\u884C"}],"relativePath":"zh/guide/getting-started.md","lastUpdated":1662189604000}',t={},e=p(`<h1 id="\u5F00\u59CB\u4F7F\u7528" tabindex="-1">\u5F00\u59CB\u4F7F\u7528 <a class="header-anchor" href="#\u5F00\u59CB\u4F7F\u7528" aria-hidden="true">#</a></h1><p>\u672C\u8282\u5C06\u5E2E\u52A9\u4F60\u4F7F\u7528 emnapi \u6784\u5EFA\u4E00\u4E2A Hello World \u793A\u4F8B\u3002</p><h2 id="\u73AF\u5883\u8981\u6C42" tabindex="-1">\u73AF\u5883\u8981\u6C42 <a class="header-anchor" href="#\u73AF\u5883\u8981\u6C42" aria-hidden="true">#</a></h2><p>\u4F60\u9700\u8981\u5B89\u88C5\uFF1A</p><ul><li>Node.js <code>&gt;= v14.6.0</code></li><li>Emscripten <code>&gt;= v3.0.0</code> (<code>v2.x</code> \u672A\u6D4B\u8BD5\uFF0C\u4E5F\u8BB8\u53EF\u4EE5\u6B63\u5E38\u5DE5\u4F5C)</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>\u8BBE\u7F6E <code>$EMSDK</code> \u73AF\u5883\u53D8\u91CF\u4E3A emsdk \u6839\u76EE\u5F55\u3002</p><p>\u628A <code>$EMSDK/upstream/emscripten</code> \u6DFB\u52A0\u5230 <code>$PATH</code> \u73AF\u5883\u53D8\u91CF\u4E2D\u3002</p></div><p>\u9A8C\u8BC1\u73AF\u5883\uFF1A</p><div class="language-bash"><pre><code><span class="token function">node</span> <span class="token parameter variable">-v</span>
<span class="token function">npm</span> <span class="token parameter variable">-v</span>
emcc <span class="token parameter variable">-v</span>
</code></pre></div><h2 id="\u5B89\u88C5" tabindex="-1">\u5B89\u88C5 <a class="header-anchor" href="#\u5B89\u88C5" aria-hidden="true">#</a></h2><p>\u5B89\u88C5 emnapi \u6709\u4E24\u79CD\u65B9\u6CD5\u3002</p><ul><li>\u901A\u8FC7 <code>npm</code> \u5C06 <code>emnapi</code> \u5B89\u88C5\u5230\u672C\u5730\u9879\u76EE\u4E2D\uFF08\u63A8\u8350\uFF09</li><li>\u901A\u8FC7 <code>cmake</code> \u4ECE\u6E90\u7801\u6784\u5EFA <code>emnapi</code> \u7136\u540E\u5B89\u88C5\u5230\u81EA\u5B9A\u4E49\u7684 sysroot \u8DEF\u5F84</li></ul><h3 id="\u901A\u8FC7-npm-\u5B89\u88C5" tabindex="-1">\u901A\u8FC7 NPM \u5B89\u88C5 <a class="header-anchor" href="#\u901A\u8FC7-npm-\u5B89\u88C5" aria-hidden="true">#</a></h3><div class="language-bash"><pre><code><span class="token function">npm</span> <span class="token function">install</span> <span class="token parameter variable">-D</span> @tybys/emnapi

<span class="token comment"># \u53EF\u9009\u7684\uFF0C\u8BF7\u9605\u8BFB &quot;emnapi \u8FD0\u884C\u65F6&quot; \u7AE0\u8282\u4E86\u89E3\u66F4\u591A</span>
<span class="token comment"># npm install -D @tybys/emnapi-runtime</span>
</code></pre></div><h3 id="\u901A\u8FC7-cmake-\u5B89\u88C5" tabindex="-1">\u901A\u8FC7 CMake \u5B89\u88C5 <a class="header-anchor" href="#\u901A\u8FC7-cmake-\u5B89\u88C5" aria-hidden="true">#</a></h3><p>\u4F60\u9700\u8981\u5B89\u88C5\uFF1A</p><ul><li>CMake <code>&gt;= 3.13</code></li><li>make</li></ul><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Windows \u7528\u6237\u6709\u591A\u79CD\u83B7\u53D6 <code>make</code> \u7684\u9009\u62E9</p><ul><li>\u5B89\u88C5 <a href="https://www.mingw-w64.org/downloads/" target="_blank" rel="noopener noreferrer">mingw-w64</a>\uFF0C\u7136\u540E\u4F7F\u7528 <code>mingw32-make</code></li><li>\u4E0B\u8F7D <a href="https://github.com/toyobayashi/make-win-build/releases" target="_blank" rel="noopener noreferrer">make \u7684 MSVC \u9884\u6784\u5EFA\u4E8C\u8FDB\u5236\u6587\u4EF6</a>\uFF0C\u6DFB\u52A0\u5230 <code>%Path%</code> \u540E\u91CD\u547D\u540D\u4E3A <code>mingw32-make</code></li><li>\u5B89\u88C5 <a href="https://visualstudio.microsoft.com/" target="_blank" rel="noopener noreferrer">Visual Studio 2022</a> C++ \u684C\u9762\u5DE5\u4F5C\u8D1F\u8F7D\uFF0C\u5728 <code>Visual Studio Developer Command Prompt</code> \u4E2D\u4F7F\u7528 <code>nmake</code></li><li>\u5B89\u88C5 <a href="https://visualstudio.microsoft.com/visual-cpp-build-tools/" target="_blank" rel="noopener noreferrer">Visual C++ Build Tools</a>\uFF0C\u5728 <code>Visual Studio Developer Command Prompt</code> \u4E2D\u4F7F\u7528 <code>nmake</code></li></ul></div><p>\u9A8C\u8BC1\u73AF\u5883\uFF1A</p><div class="language-bash"><pre><code>cmake <span class="token parameter variable">--version</span>
<span class="token function">make</span> <span class="token parameter variable">-v</span>

<span class="token comment"># Windows cmd</span>
<span class="token comment"># mingw32-make -v</span>

<span class="token comment"># Visual Studio Developer Command Prompt</span>
<span class="token comment"># nmake /?</span>
</code></pre></div><p>\u514B\u9686\u4ED3\u5E93\u5E76\u4ECE\u6E90\u7801\u6784\u5EFA\uFF1A</p><div class="language-bash"><pre><code><span class="token function">git</span> clone https://github.com/toyobayashi/emnapi
<span class="token builtin class-name">cd</span> ./emnapi

<span class="token function">npm</span> run build

<span class="token builtin class-name">cd</span> ./packages/emnapi

emcmake cmake <span class="token parameter variable">-DCMAKE_BUILD_TYPE</span><span class="token operator">=</span>Release -H. <span class="token parameter variable">-Bbuild</span>

<span class="token comment"># Windows have mingw32-make installed</span>
<span class="token comment"># emcmake cmake -DCMAKE_BUILD_TYPE=Release -G &quot;MinGW Makefiles&quot; -H. -Bbuild</span>

<span class="token comment"># Windows Visual Studio Developer Command Prompt</span>
<span class="token comment"># emcmake cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_MAKE_PROGRAM=nmake -G &quot;NMake Makefiles&quot;  -H. -Bbuild</span>

cmake <span class="token parameter variable">--build</span> build
cmake <span class="token parameter variable">--install</span> build <span class="token punctuation">[</span>--prefix <span class="token operator">&lt;</span>sysroot<span class="token operator">&gt;</span><span class="token punctuation">]</span>
</code></pre></div><p>\u9ED8\u8BA4\u7684 <code>sysroot</code> \u662F <code>$EMSDK/upstream/emscripten/cache/sysroot</code>\u3002</p><h2 id="\u7F16\u5199\u6E90\u7801" tabindex="-1">\u7F16\u5199\u6E90\u7801 <a class="header-anchor" href="#\u7F16\u5199\u6E90\u7801" aria-hidden="true">#</a></h2><p>\u521B\u5EFA <code>hello.c</code>\u3002</p><div class="language-c"><pre><code><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;node_api.h&gt;</span></span>
<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h&gt;</span></span>

<span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name function">NAPI_CALL</span><span class="token expression"><span class="token punctuation">(</span>env<span class="token punctuation">,</span> the_call<span class="token punctuation">)</span>                                </span><span class="token punctuation">\\</span>
  <span class="token expression"><span class="token keyword">do</span> <span class="token punctuation">{</span>                                                          </span><span class="token punctuation">\\</span>
    <span class="token expression"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>the_call<span class="token punctuation">)</span> <span class="token operator">!=</span> napi_ok<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token keyword">const</span> napi_extended_error_info <span class="token operator">*</span>error_info<span class="token punctuation">;</span>               </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token function">napi_get_last_error_info</span><span class="token punctuation">(</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>error_info<span class="token punctuation">)</span><span class="token punctuation">;</span>             </span><span class="token punctuation">\\</span>
      <span class="token expression">bool is_pending<span class="token punctuation">;</span>                                          </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> err_message <span class="token operator">=</span> error_info<span class="token operator">-&gt;</span>error_message<span class="token punctuation">;</span>      </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token function">napi_is_exception_pending</span><span class="token punctuation">(</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>is_pending<span class="token punctuation">)</span><span class="token punctuation">;</span>            </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>is_pending<span class="token punctuation">)</span> <span class="token punctuation">{</span>                                        </span><span class="token punctuation">\\</span>
        <span class="token expression"><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> error_message <span class="token operator">=</span> err_message <span class="token operator">!=</span> <span class="token constant">NULL</span> <span class="token operator">?</span>       </span><span class="token punctuation">\\</span>
          <span class="token expression">err_message <span class="token operator">:</span>                                         </span><span class="token punctuation">\\</span>
          <span class="token string">&quot;empty error message&quot;</span><span class="token expression"><span class="token punctuation">;</span>                                </span><span class="token punctuation">\\</span>
        <span class="token expression"><span class="token function">napi_throw_error</span><span class="token punctuation">(</span><span class="token punctuation">(</span>env<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> error_message<span class="token punctuation">)</span><span class="token punctuation">;</span>           </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token punctuation">}</span>                                                         </span><span class="token punctuation">\\</span>
      <span class="token expression"><span class="token keyword">return</span> <span class="token constant">NULL</span><span class="token punctuation">;</span>                                              </span><span class="token punctuation">\\</span>
    <span class="token expression"><span class="token punctuation">}</span>                                                           </span><span class="token punctuation">\\</span>
  <span class="token expression"><span class="token punctuation">}</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span></span></span>

<span class="token keyword">static</span> napi_value <span class="token function">js_hello</span><span class="token punctuation">(</span>napi_env env<span class="token punctuation">,</span> napi_callback_info info<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  napi_value world<span class="token punctuation">;</span>
  <span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> str <span class="token operator">=</span> <span class="token string">&quot;world&quot;</span><span class="token punctuation">;</span>
  <span class="token class-name">size_t</span> str_len <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>str<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">NAPI_CALL</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token function">napi_create_string_utf8</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> str<span class="token punctuation">,</span> str_len<span class="token punctuation">,</span> <span class="token operator">&amp;</span>world<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> world<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token function">NAPI_MODULE_INIT</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  napi_value hello<span class="token punctuation">;</span>
  <span class="token function">NAPI_CALL</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token function">napi_create_function</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> NAPI_AUTO_LENGTH<span class="token punctuation">,</span>
                                      js_hello<span class="token punctuation">,</span> <span class="token constant">NULL</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>hello<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token function">NAPI_CALL</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> <span class="token function">napi_set_named_property</span><span class="token punctuation">(</span>env<span class="token punctuation">,</span> exports<span class="token punctuation">,</span> <span class="token string">&quot;hello&quot;</span><span class="token punctuation">,</span> hello<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">return</span> exports<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre></div><p>C \u4EE3\u7801\u7B49\u4EF7\u4E8E\u4E0B\u9762\u7684 JavaScript\uFF1A</p><div class="language-js"><pre><code>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">exports</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token function-variable function">hello</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token function">hello</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// js_hello \u4E2D\u7684\u539F\u751F\u4EE3\u7801</span>
    <span class="token keyword">const</span> world <span class="token operator">=</span> <span class="token string">&#39;world&#39;</span>
    <span class="token keyword">return</span> world
  <span class="token punctuation">}</span>

  exports<span class="token punctuation">.</span>hello <span class="token operator">=</span> hello
  <span class="token keyword">return</span> exports
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>module<span class="token punctuation">.</span>exports<span class="token punctuation">)</span>
</code></pre></div><h2 id="\u6784\u5EFA\u6E90\u7801" tabindex="-1">\u6784\u5EFA\u6E90\u7801 <a class="header-anchor" href="#\u6784\u5EFA\u6E90\u7801" aria-hidden="true">#</a></h2><p>\u4F7F\u7528 <code>emcc</code> \u7F16\u8BD1 <code>hello.c</code>\uFF0C\u901A\u8FC7 <code>-I</code> \u8BBE\u7F6E\u5305\u542B\u76EE\u5F55\uFF0C\u5BFC\u51FA <code>_malloc</code> \u548C <code>_free</code>\uFF0C\u901A\u8FC7 <code>--js-library</code> \u94FE\u63A5emnapi JavaScript\u5E93\u3002</p><div class="language-bash"><pre><code>emcc <span class="token parameter variable">-O3</span> <span class="token punctuation">\\</span>
     -I./node_modules/@tybys/emnapi/include <span class="token punctuation">\\</span>
     --js-library<span class="token operator">=</span>./node_modules/@tybys/emnapi/dist/library_napi.js <span class="token punctuation">\\</span>
     <span class="token parameter variable">-sEXPORTED_FUNCTIONS</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;_malloc&#39;</span>,<span class="token string">&#39;_free&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">-o</span> hello.js <span class="token punctuation">\\</span>
     ./node_modules/@tybys/emnapi/src/emnapi.c <span class="token punctuation">\\</span>
     hello.c
</code></pre></div><p>\u5982\u679C\u4F60\u901A\u8FC7 <code>cmake --install</code> \u5B89\u88C5 <code>emnapi</code>\uFF0C\u8BF7\u8FD0\u884C\uFF1A</p><div class="language-bash"><pre><code>emcc <span class="token parameter variable">-O3</span> <span class="token punctuation">\\</span>
     -I<span class="token operator">&lt;</span>sysroot<span class="token operator">&gt;</span>/include/emnapi <span class="token punctuation">\\</span>
     -L<span class="token operator">&lt;</span>sysroot<span class="token operator">&gt;</span>/lib/emnapi <span class="token punctuation">\\</span>
     --js-library<span class="token operator">=</span><span class="token operator">&lt;</span>sysroot<span class="token operator">&gt;</span>/lib/emnapi/library_napi.js <span class="token punctuation">\\</span>
     <span class="token parameter variable">-sEXPORTED_FUNCTIONS</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;_malloc&#39;</span>,<span class="token string">&#39;_free&#39;</span><span class="token punctuation">]</span> <span class="token punctuation">\\</span>
     <span class="token parameter variable">-o</span> hello.js <span class="token punctuation">\\</span>
     <span class="token parameter variable">-lemnapi</span> <span class="token punctuation">\\</span>
     hello.c
</code></pre></div><p>\u5982\u679C\u4E0A\u9762\u7684\u73AF\u5883\u51C6\u5907\u6CA1\u6709\u95EE\u9898\uFF0C\u8FD9\u4E00\u6B65\u5C06\u4F1A\u8F93\u51FA <code>hello.js</code> \u548C <code>hello.wasm</code>\u3002</p><h2 id="\u5728\u6D4F\u89C8\u5668\u4E0A\u8FD0\u884C" tabindex="-1">\u5728\u6D4F\u89C8\u5668\u4E0A\u8FD0\u884C <a class="header-anchor" href="#\u5728\u6D4F\u89C8\u5668\u4E0A\u8FD0\u884C" aria-hidden="true">#</a></h2><p>\u628A\u8F93\u51FA\u7684 JS \u5F15\u5165\u8FDB HTML \u4F7F\u7528\uFF0C\u9ED8\u8BA4\u5BFC\u51FA\u5728 <a href="https://emscripten.org/docs/api_reference/module.html" target="_blank" rel="noopener noreferrer">Module</a> \u5BF9\u8C61\u4E0A\u7684 <code>emnapiExports</code>\u3002\u53EF\u901A\u8FC7\u9884\u5B9A\u4E49 <code>NODE_GYP_MODULE_NAME</code> \u4FEE\u6539\u9ED8\u8BA4\u7684\u5BFC\u51FA\u952E\u503C\u3002<code>onEmnapiInitialized</code> \u5C06\u5728 <code>onRuntimeInitialized</code> \u4E4B\u524D\u88AB\u8C03\u7528\u3002</p><div class="language-html"><pre><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>hello.js<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token comment">// Emscripten js glue code will create a global \`Module\` object</span>
Module<span class="token punctuation">.</span><span class="token function-variable function">onEmnapiInitialized</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> emnapiExports</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">// error handling</span>
    <span class="token comment">// emnapiExports === undefined</span>
    <span class="token comment">// Module[NODE_GYP_MODULE_NAME] === undefined</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
    <span class="token comment">// emnapiExports === Module[NODE_GYP_MODULE_NAME]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

Module<span class="token punctuation">.</span><span class="token function-variable function">onRuntimeInitialized</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">&#39;emnapiExports&#39;</span> <span class="token keyword">in</span> Module<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span><span class="token punctuation">;</span>
  <span class="token keyword">var</span> binding <span class="token operator">=</span> Module<span class="token punctuation">.</span>emnapiExports<span class="token punctuation">;</span>
  <span class="token keyword">var</span> msg <span class="token operator">=</span> <span class="token string">&#39;hello &#39;</span> <span class="token operator">+</span> binding<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  window<span class="token punctuation">.</span><span class="token function">alert</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre></div><p>\u5982\u679C\u4F60\u6B63\u5728\u4F7F\u7528 <code>Visual Studio Code</code> \u5E76\u5B89\u88C5\u4E86 <code>Live Server</code> \u6269\u5C55\uFF0C\u5219\u53EF\u4EE5\u53F3\u952E\u5355\u51FB Visual Studio Code \u6E90\u4EE3\u7801\u6811\u4E2D\u7684 HTML \u6587\u4EF6\u518D\u5355\u51FB <code>Open With Live Server</code>\uFF0C\u7136\u540E\u4F60\u5C31\u53EF\u4EE5\u770B\u5230 hello world \u5F39\u7A97\u4E86\uFF01</p><h2 id="\u5728-node-js-\u4E0A\u8FD0\u884C" tabindex="-1">\u5728 Node.js \u4E0A\u8FD0\u884C <a class="header-anchor" href="#\u5728-node-js-\u4E0A\u8FD0\u884C" aria-hidden="true">#</a></h2><p>\u521B\u5EFA <code>index.js</code>\u3002</p><div class="language-js"><pre><code><span class="token keyword">const</span> Module <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./hello.js&#39;</span><span class="token punctuation">)</span>

Module<span class="token punctuation">.</span><span class="token function-variable function">onEmnapiInitialized</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> emnapiExports</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">// ...</span>
<span class="token punctuation">}</span>

Module<span class="token punctuation">.</span><span class="token function-variable function">onRuntimeInitialized</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token punctuation">(</span><span class="token string">&#39;emnapiExports&#39;</span> <span class="token keyword">in</span> Module<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span>
  <span class="token keyword">const</span> binding <span class="token operator">=</span> Module<span class="token punctuation">.</span>emnapiExports
  <span class="token keyword">const</span> msg <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">hello </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>binding<span class="token punctuation">.</span><span class="token function">hello</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre></div><p>\u6267\u884C\u811A\u672C\u3002</p><div class="language-bash"><pre><code><span class="token function">node</span> ./index.js
</code></pre></div><p>\u7136\u540E\u4F60\u5C31\u53EF\u4EE5\u770B\u5230 hello world \u7684\u8F93\u51FA\u4E86\u3002</p><p>\u5982\u679C\u5728\u8FD0\u884C\u65F6\u521D\u59CB\u5316\u65F6\u629B\u51FA JS \u9519\u8BEF\uFF0CNode.js \u8FDB\u7A0B\u5C06\u4F1A\u9000\u51FA\u3002\u53EF\u4EE5\u4F7F\u7528<code>-sNODEJS_CATCH_EXIT=0</code> \u5E76\u81EA\u5DF1\u6DFB\u52A0<code>uncaughtException</code>\u3002\u6216\u8005\u53EF\u4EE5\u4F7F\u7528 <code>Module.onEmnapiInitialized</code> \u6765\u6355\u83B7\u5F02\u5E38\u3002</p>`,44),o=[e];function c(l,i,u,r,k,d){return s(),a("div",null,o)}var g=n(t,[["render",c]]);export{h as __pageData,g as default};
